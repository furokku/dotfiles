[bar/main]

; Use either of the following command to list available outputs:
; $ polybar -M | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
; If no monitor is given, the primary monitor is used if it exists
monitor = 

; Width and height of the bar window.
; Supports any percentage with offset.
; For 'width', the percentage is relative to the monitor width and for 'height'
; relative to the monitor height
width = 100%
height = 30

; Offset the bar window in the x and/or y direction.
; Supports any percentage with offset relative to the monitor width (offset-x)
; or height (offset-y)
offset-x = 0
offset-y = 0

; Padding (number of spaces, pixels, or points) to add at the beginning/end of
; the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 1

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
underline-size = 2

; ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = #1d2021
foreground = #ebdbb2
;border-bottom-color = #00ff84
;border-bottom-color = #1d2021
;border-bottom-size = 1

; Put the bar at the bottom of the screen
bottom = false

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = Terminus:pixelsize=13;1
font-1 = Font Awesome 6 Brands:pixelsize=13;2
font-2 = Font Awesome 6 Free Solid:pixelsize=13;3

; The separator will be inserted between the output of each module
; This has the same properties as a label
separator = "  |  "

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = ewmh mpd
modules-center = date
modules-right = layout cpu pulseaudio memory

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
; Note: With this most WMs will no longer reserve space for 
; the bar and it will overlap other windows. You need to configure
; your WM to add a gap where the bar will be placed.
override-redirect = false

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported values:
;   generic (Moves the bar window above the first window in the window stack.
;            Works in xmonad, may not work on other WMs)
;           (New in version 3.6.0)
;   bspwm
;   i3 (requires `override-redirect = true`)
wm-restack = generic

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = true

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
tray-position = right

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 20

; scroll-up = "#i3.prev"
; scroll-down = "#i3.next"


[module/cpu]
type = internal/cpu

; Seconds to sleep between updates
; Default: 1
interval = 1

; Available tags:
;   <label> (default)
;   <bar-load>
;   <ramp-load>
;   <ramp-coreload>
format = <label>
format-underline = #b8bb26

; Available tokens:
;   %percentage% (default) - total cpu load averaged over all cores
;   %percentage-sum% - Cumulative load on all cores
;   %percentage-cores% - load percentage for each core
;   %percentage-core[1-9]% - load percentage for specific core
label =%{A3:bash /home/furokku/.local/bin/notifytemp.sh:} cpu %percentage%% %{A}
label-foreground = #ebdbb2


[module/memory]
type = internal/memory

; Seconds to sleep between updates
; Default: 1
interval = 3

; Available tags:
;   <label> (default)
;   <bar-used>
;   <bar-free>
;   <ramp-used>
;   <ramp-free>
;   <bar-swap-used>
;   <bar-swap-free>
;   <ramp-swap-used>
;   <ramp-swap-free>
format = <label>
format-underline = #fb4934

; Available tokens:
;   %percentage_used% (default)
;   %percentage_free%
;   %used% (Switches between KiB, MiB, and GiB) (New in version 3.6.0)
;   %free% (Switches between KiB, MiB, and GiB) (New in version 3.6.0)
;   %total% (Switches between KiB, MiB, and GiB) (New in version 3.6.0)
;   %gb_used%
;   %gb_free%
;   %gb_total%
;   %mb_used%
;   %mb_free%
;   %mb_total%
;   %percentage_swap_used%
;   %percentage_swap_free%
;   %swap_total% (Switches between KiB, MiB, and GiB) (New in version 3.6.0)
;   %swap_free% (Switches between KiB, MiB, and GiB) (New in version 3.6.0)
;   %swap_used% (Switches between KiB, MiB, and GiB) (New in version 3.6.0)
;   %gb_swap_total%
;   %gb_swap_free%
;   %gb_swap_used%
;   %mb_swap_total%
;   %mb_swap_free%
;   %mb_swap_used%
label = ram %mb_used% / %mb_total%
label-foreground = #ebdbb2


[module/date]
type = internal/date

; Seconds to sleep between updates
; Default: 1.0
interval = 1

; Available tags:
;   <label> (default)
format = <label>

; Available tokens:
;   %date%
;   %time%
; Default: %date%
label = %date%  %time%
label-foreground = #ebdbb2
label-background = #1d2021

; See "https://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
date = "%A, %d %B"

; Optional time format
time = "%H:%M:%S"


[module/pulseaudio]
type = internal/pulseaudio

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = 5

; Sink to be used, if it exists (find using `pacmd list-sinks`, name field)
; If not, uses default sink
sink = alsa_output.pci-0000_27_00.6.analog-stereo

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <label-volume>
format-volume-underline = #fabd2f

format-muted = <label-muted>
format-muted-underline = #fabd2f

; Available tokens:
;   %percentage% (default)
;   %decibels%
label-volume = vol %percentage%%
label-volume-foreground = #ebdbb2

label-muted = muted (%percentage%%)
label-muted-foreground = #606060

; Right and middle click handlers
click-right = pavucontrol
; click-middle =


[module/layout]
type = internal/xkeyboard

; Available tags:
;   <label-layout> (default)
;   <label-indicator> (default)
format = <label-layout>
format-underline = #83a598

; Available tokens:
;   %layout%
;   %name%
;   %number%
;   %icon%
;   %variant% (New in version 3.6.0)
; Default: %layout%
label-layout = %name%


[module/mpd]
type = internal/mpd

; Host where mpd is running (either ip or domain name)
; Can also be the full path to a unix socket where mpd is running.
host = 127.0.0.1
port = 6600

; Seconds to sleep between progressbar/song timer sync
; Default: 1
interval = 1

; Available tags:
;   <label-song> (default)
;   <label-time>
;   <bar-progress>
;   <toggle> - gets replaced with <icon-(pause|play)>
;   <toggle-stop> - gets replaced with <icon-(stop|play)>
;   <icon-random>
;   <icon-repeat>
;   <icon-repeatone> (deprecated)
;   <icon-single> - Toggle playing only a single song. Replaces <icon-repeatone>
;   <icon-consume>
;   <icon-prev>
;   <icon-stop>
;   <icon-play>
;   <icon-pause>
;   <icon-next>
;   <icon-seekb>
;   <icon-seekf>
format-online = <label-song>  <label-time>
;format-playing = ${self.format-online}
;format-paused = ${self.format-online}
;format-stopped = ${self.format-online}

; Available tags:
;   <label-offline>
; Default: ""
;format-offline = <label-offline>

; Available tokens:
;   %artist%
;   %album-artist%
;   %album%
;   %date%
;   %title%
; Default: %artist% - %title%
label-song = %artist% - %title%
label-song-foreground = #ebdbb2

; Available tokens:
;   %elapsed%
;   %total%
; Default: %elapsed% / %total%
label-time = %elapsed% / %total%
label-time-foreground = #ebdbb2

; Available tokens:
;   None
label-offline = mpd is offline

; Only applies if <icon-X> is used
;icon-play = ‚èµ
;icon-pause = ‚è∏
;icon-stop = ‚èπ
;icon-prev = ‚èÆ
;icon-next = ‚è≠
;icon-seekb = ‚è™
;icon-seekf = ‚è©
;icon-random = üîÄ
;icon-repeat = üîÅ
;icon-repeatone = üîÇ
;icon-single = üîÇ
;icon-consume = ‚úÄ


[module/ewmh]
type = internal/xworkspaces

; Create click handler used to focus desktop
; Default: true
enable-click = false

; Create scroll handlers used to cycle desktops
; Default: true
enable-scroll = false

; Available tags:
;   <label-monitor>
;   <label-state> - gets replaced with <label-(active|urgent|occupied|empty)>
; Default: <label-state>
format = <label-state>

; icon-[0-9]+ = <desktop-name>;<icon>
; NOTE: The desktop name needs to match the name configured by the WM
; You can get a list of the defined desktops using:
; $ xprop -root _NET_DESKTOP_NAMES
; Note: Neither <desktop-name> nor <icon> can contain a semicolon (;)
icon-0 = 1;Ôâ®
icon-1 = 2;Ôéí
icon-2 = 3;Ôò°
icon-3 = 4;ÔÑ†
icon-4 = 5;Ôò°
icon-5 = 6;Ôò°
icon-6 = 7;Ôò°
icon-7 = 8;Ôò°
icon-8 = 9;Ôò°
icon-9 = 10;Ôò°

; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %nwin% (New in version 3.6.0)
; Default: %icon% %name%
label-active = %name%
label-active-foreground = #ebdbb2
label-active-background = #3c3836
label-active-padding = 1

label-occupied = ""

label-empty = ""

label-urgent = ""

; -----------------------------
; |                           |
; | stuff I don't use anymore |
; | (commented out)           |
; -----------------------------


; replaced by xkeyboard module
;[module/kbd_layout]
;type = custom/script
;
;exec = i3-keyboard-layout get
;interval = 0.5
;format-foreground = #ebdbb2
;
;
; there's a module for this that I didn't even know about,
; but I'm not using it either way so whatever
;[module/window_name]
;type = custom/script
;
;exec = xprop -id $(xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}') | awk '/_NET_WM_NAME/{$1=$2="";print}' | cut -d'"' -f2
;interval = 0.5
;format-foreground = #ebdbb2
;format-background = #1d2021
;
;
; did a thing with xworkspaces
;[module/wsnum]
;type = custom/script
;interval = 0.1
;
;exec = WS=$(( $(wmctrl -d | grep '*' | cut -c 1 -) + 1 )); if (($WS == 1)); then ICON='Ôâ® '; elif (($WS == 2)); then ICON='Ôéí '; elif (($WS == 4)); then ICON='ÔÑ† '; else ICON='Ôò° '; fi; printf "%s" "${ICON}${WS}"
;
;format = <label>
;format-foreground = #ebdbb2
;format-background = #3c3836
;format-padding = 1
;
;label = %output%
