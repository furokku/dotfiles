[global]
font = Ubuntu Mono 12
allow_markup = yes
ignore_newline = no

alignment = left
transparency = 0

mouse_left_click = close_current
mouse_right_click = close_all
icon_position = off

# The format of the message. Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
format = "<b>%a:</b> %s\n%b"

# Sort messages by urgency
sort = yes

# Show how many messages are currently hidden (because of geometry)
indicate_hidden = yes

# The frequency with wich text that is longer than the notification
# window allows bounces back and forth.
# This option conflicts with 'word_wrap'.
# Set to 0 to disable
bounce_freq = 0
# show age of message if message is older than show_age_threshold seconds.
# set to -1 to disable
show_age_threshold = 30

# split notifications into multiple lines if they don't fit into geometry
word_wrap = yes

# the geometry of the window
# geometry [{width}]x{height}][+/-{x}+/-{y}]
# The geometry of the message window.
# The height is measured in number of notifications everything else in pixels. If the width
# is omitted but the height is given ("-geometry x2"), the message window
# expands over the whole screen (dmenu-like). If width is 0,
# the window expands to the longest message displayed.
# A positive x is measured from the left, a negative from the
# right side of the screen.  Y is measured from the top and down respectevly.
# The width can be negative. In this case the actual width is the
# screen width minus the width defined in within the geometry option.
geometry = "300x5-30+20"

# Don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# Set to 0 to disable.
idle_threshold = 20

# Display notification on focused monitor. Possible modes are:
# mouse: follow mouse pointer
# keyboard: follow window with keyboard focus
# none: don't follow anything
#
# "keyboard" needs a windowmanager that exports the _NET_ACTIVE_WINDOW property.
# This should be the case for almost all modern windowmanagers.
follow = keyboard

# should a notification popped up from history be sticky or
# timeout as if it would normally do.
sticky_history = yes

# The height of a single line. If the height is smaller than the font height,
# it will get raised to the font height.
# This adds empty space above and under the text.
line_height = 0

# Draw a line of 'separatpr_height' pixel height between two notifications.
# Set to 0 to disable
separator_height = 2

# padding between text and separator
padding = 6

# horizontal padding
horizontal_padding = 8

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background
#  * foreground: use the same color as the foreground
#  * frame: use the same color as the frame.
#  * anything else will be interpreted as a X color
separator_color = frame

# print a notification on startup
# This is mainly for error detection, since dbus (re-)starts dunst
# automatically after a crash.
startup_notification = true

# browser for opening urls in context menu
browser = /usr/lib/chromium/chromium -new-tab

[frame]
width = 2
color = "#ffc0cb"

[urgency_low]
# IMPORTANT: colors have to be defined in quotation marks.
# Otherwise the '#' and following  would be interpreted as a comment.
background = "#323232"
foreground = "#fcfcfc"
timeout = 10

[urgency_normal]
background = "#323232"
foreground = "#fcfcfc"
timeout = 10

[urgency_critical]
background = "#ebdbb2"
foreground = "#323232"
timeout = 0
